package com.dohung.ws.api.ResourceServer.controller;

import org.springframework.security.access.annotation.Secured;
import org.springframework.security.access.prepost.PostAuthorize;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.oauth2.jwt.Jwt;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.dohung.ws.api.ResourceServer.response.UserRest;

@RestController
@RequestMapping("users")
public class UsersController {

	@GetMapping("/status/check")
	public String status() {
		return "checking....";
	}

	@PreAuthorize("hasAuthority('ROLE_developer') or #id == #jwt.subject")
//	@Secured("ROLE_developer")
	@DeleteMapping(path = "/{id}")
	public String delete(@PathVariable String id, @AuthenticationPrincipal Jwt jwt) {
		return "Deleteting user with id: " + id + " and JWT subject "+jwt.getSubject();
	}
	
	
	@PostAuthorize("returnObject.userId == #jwt.subject")
	@GetMapping(path = "/{id}")
	public UserRest getUser(@PathVariable String id, @AuthenticationPrincipal Jwt jwt) {
		return new UserRest("Do", "Hung", "0ea8bde3-f4ea-4c4d-baac-5d745479b85e");
	}

	
	

}
